{"ast":null,"code":"import { FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { HizmetService } from \"app/services/hizmet.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"app/services/hizmet.service\";\nexport let HizmetlerAddComponent = /*#__PURE__*/(() => {\n  class HizmetlerAddComponent {\n    constructor(formBuilder, router, toasterService, hizmetServcie) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.toasterService = toasterService;\n      this.hizmetServcie = hizmetServcie;\n    }\n\n    ngOnInit() {\n      this.createHizmetAddForm();\n    }\n\n    createHizmetAddForm() {\n      this.hizmetAddForm = this.formBuilder.group({\n        hizmetAdi: [\"\", Validators.required],\n        hizmetResmi: [\"\", Validators.required],\n        hizmetOzet: [\"\", Validators.required],\n        hizmetDetay: [\"\", Validators.required]\n      });\n    }\n\n    add() {\n      if (this.hizmetAddForm.valid) {\n        let hizmetModel = Object.assign({}, this.hizmetAddForm.value);\n        this.hizmetServcie.addHizmet(hizmetModel).subscribe(response => {\n          this.router.navigate([\"hizmetler\"]);\n          this.toasterService.success(response.message, \"Başarılı\");\n        }, responseError => {\n          if (responseError.error.ValidationErrors.length > 0) {\n            for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n              this.toasterService.error(responseError.error.ValidationErrors[i].ErrorMessage, \"Doğrulama hatası\");\n            }\n          }\n        });\n      } else {\n        this.toasterService.error(\"Eksik Hizmet Bilgileri.\", \"Uyarı\");\n      }\n\n      return;\n    }\n\n  }\n\n  HizmetlerAddComponent.ɵfac = function HizmetlerAddComponent_Factory(t) {\n    return new (t || HizmetlerAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.HizmetService));\n  };\n\n  HizmetlerAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HizmetlerAddComponent,\n    selectors: [[\"hizmetler-add\"]],\n    decls: 15,\n    vars: 1,\n    consts: [[1, \"form-group\", 3, \"formGroup\"], [1, \"form-goup\"], [\"type\", \"text\", \"id\", \"hizmetAdi\", \"name\", \"hizmetAdi\", \"formControlName\", \"hizmetAdi\", \"placeholder\", \"Hizmet Ad\\u0131\", 1, \"form-control\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"hizmetDetay\", \"name\", \"hizmetDetay\", \"formControlName\", \"hizmetDetay\", \"placeholder\", \"Hizmet Detay\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"hizmetOzet\", \"name\", \"hizmetOzet\", \"formControlName\", \"hizmetOzet\", \"placeholder\", \"Hizmet \\u00D6zet\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"hizmetResim\", \"formControlName\", \"hizmetResim\", \"placeholder\", \"Hizmet Resim Link\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function HizmetlerAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Yeni Hizmet Ekle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function HizmetlerAddComponent_Template_button_click_13_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(14, \" Hizmet Ekle \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.hizmetAddForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return HizmetlerAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}