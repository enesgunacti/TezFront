{"ast":null,"code":"var _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CategoryService } from \"app/services/category.service\";\nimport { ToastrService } from \"ngx-toastr\";\nlet ProductEditComponent = class ProductEditComponent {\n  constructor(formBuilder, categoryService, productService, toasterService, router, activatedRoute) {\n    this.formBuilder = formBuilder;\n    this.categoryService = categoryService;\n    this.productService = productService;\n    this.toasterService = toasterService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n  }\n\n  ngOnInit() {// this.createProductEditForm();\n    // this.activatedRoute.params.subscribe((params)=>{\n    //   if(params[\"productId\"]){\n    //     this.getProduct(params[\"productId\"])\n    //   }\n    // })\n  } // createProductEditForm(){\n  //   this.productEditForm = this.formBuilder.group({\n  //     productName:[\"\",Validators.required],\n  //     productDescription:[\"\",Validators.required],\n  //     productPicture:[\"\",Validators.required],\n  //     categoryId:[\"\",Validators.required],\n  //   })\n  // }\n  // getProduct(productId:number){\n  //   this.productService.getProductById(productId).subscribe(response=>{\n  //     this.productEditForm = this.formBuilder.group({\n  //       productId:[response.data?.productId || '', \"\"],\n  //       productName:[response.data?.productName || '', \"\"],\n  //       productDescription:[response.data?.productDescription || '', \"\"],\n  //       productPicture:[response.data?.productPicture || '', \"\"],\n  //       categoryId:[response.data?.categoryId || '', \"\"]\n  //     })\n  //   })\n  // }\n\n\n  edit() {\n    if (this.productEditForm.valid) {\n      let productEditModel = Object.assign({}, this.productEditForm.value); // this.productService.editProduct(productEditModel).subscribe(\n      //   (response) => {\n      //     this.router.navigate(['products']);\n      //     this.toasterService.success(response.message, 'Başarılı');\n      //   },\n      //   (responseError) => {\n      //     if (responseError.error.ValidationErrors.length > 0) {\n      //       for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n      //         this.toasterService.error(\n      //           responseError.error.ValidationErrors[i].ErrorMessage,\n      //           'Doğrulama hatası'\n      //         );\n      //       }\n      //     }\n      //   }\n      // )\n    } else {\n      this.toasterService.error('Eksik Ürün Bilgileri.', 'Uyarı');\n    }\n\n    return;\n  }\n\n};\nProductEditComponent = __decorate([Component({\n  selector: \"product-edit\",\n  templateUrl: \"./product-edit.component.html\",\n  styleUrls: [\"./product-edit.component.scss\"]\n}), __metadata(\"design:paramtypes\", [FormBuilder, CategoryService, typeof (_a = typeof ProductService !== \"undefined\" && ProductService) === \"function\" ? _a : Object, ToastrService, Router, ActivatedRoute])], ProductEditComponent);\nexport { ProductEditComponent };","map":null,"metadata":{},"sourceType":"module"}