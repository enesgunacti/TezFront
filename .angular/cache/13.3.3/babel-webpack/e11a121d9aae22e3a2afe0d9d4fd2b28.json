{"ast":null,"code":"import { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ContactService } from \"app/services/contact.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/contact.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nexport let ContactsUpdateComponent = /*#__PURE__*/(() => {\n  class ContactsUpdateComponent {\n    constructor(formBuilder, contactService, toasterService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.contactService = contactService;\n      this.toasterService = toasterService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n    }\n\n    ngOnInit() {\n      this.createContactEditForm();\n      this.activatedRoute.params.subscribe(params => {\n        if (params[\"contactId\"]) {\n          this.getContact(params[\"contactId\"]);\n        }\n      });\n    }\n\n    createContactEditForm() {\n      this.contactEditForm = this.formBuilder.group({\n        contactName: [\"\", Validators.required],\n        contactDetail: [\"\", Validators.required]\n      });\n    }\n\n    getContact(contactId) {\n      this.contactService.getContactById(contactId).subscribe(response => {\n        var _a, _b, _c;\n\n        this.contactEditForm = this.formBuilder.group({\n          contactId: [((_a = response.data) === null || _a === void 0 ? void 0 : _a.contactId) || \"\", \"\"],\n          contactName: [((_b = response.data) === null || _b === void 0 ? void 0 : _b.contactName) || \"\", \"\"],\n          contactDetail: [((_c = response.data) === null || _c === void 0 ? void 0 : _c.contactDetail) || \"\", \"\"]\n        });\n      });\n    }\n\n    edit() {\n      if (this.contactEditForm.valid) {\n        let contactModel = Object.assign({}, this.contactEditForm.value);\n        this.contactService.editContact(contactModel).subscribe(response => {\n          this.router.navigate([\"contacts\"]);\n          this.toasterService.success(response.message, \"İletişim Güncellemesi\");\n        }, responseError => {\n          if (responseError.error.ValidationErrors.length > 0) {\n            for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n              this.toasterService.error(responseError.error.ValidationErrors[i].ErrorMessage, \"Doğrulama hatası\");\n            }\n          }\n        });\n      } else {\n        this.toasterService.error(\"Eksik İletişim Bilgileri.\", \"Uyarı\");\n      }\n\n      return;\n    }\n\n  }\n\n  ContactsUpdateComponent.ɵfac = function ContactsUpdateComponent_Factory(t) {\n    return new (t || ContactsUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ContactService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  ContactsUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactsUpdateComponent,\n    selectors: [[\"contacts-update\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"form-groupx\", 3, \"formGroup\"], [1, \"form-goup\"], [\"type\", \"text\", \"id\", \"contactName\", \"name\", \"contactName\", \"formControlName\", \"contactName\", \"placeholder\", \"\\u0130leti\\u015Fim Ba\\u015Fl\\u0131k\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"contactDetail\", \"name\", \"contactDetail\", \"formControlName\", \"contactDetail\", \"placeholder\", \"\\u0130leti\\u015Fim \\u0130\\u00E7erik\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function ContactsUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"\\u0130leti\\u015Fim Bilgisi G\\u00FCncelle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ContactsUpdateComponent_Template_button_click_7_listener() {\n          return ctx.edit();\n        });\n        i0.ɵɵtext(8, \" \\u0130leti\\u015Fim Bilgisi G\\u00FCncelle \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.contactEditForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return ContactsUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}