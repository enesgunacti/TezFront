{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CategoryService } from 'app/services/category.service';\nimport { UrunlerService } from 'app/services/urunler.service';\nimport { ToastrService } from 'ngx-toastr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/urunler.service\";\nimport * as i3 from \"app/services/category.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/router\";\nexport let UrunEkleComponent = /*#__PURE__*/(() => {\n  class UrunEkleComponent {\n    constructor(formBuilder, urunlerService, categoryService, toasterService, router) {\n      this.formBuilder = formBuilder;\n      this.urunlerService = urunlerService;\n      this.categoryService = categoryService;\n      this.toasterService = toasterService;\n      this.router = router;\n      this.categories = [];\n    }\n\n    ngOnInit() {\n      this.createProductAddForm();\n      this.getCategories();\n    }\n\n    getCategories() {// this.categoryService.getKategoriler().subscribe((response) => {\n      //   this.categories = response.data;\n      // });\n    }\n\n    createProductAddForm() {\n      this.productAddForm = this.formBuilder.group({\n        productName: [\"\", Validators.required],\n        productDescription: [\"\", Validators.required],\n        productFile: [\"\", Validators.required],\n        categoryId: [\"\", Validators.required]\n      });\n    }\n\n    add() {\n      if (this.productAddForm.valid) {\n        let productModel = Object.assign({}, this.productAddForm.value);\n        this.urunlerService.addProduct(productModel).subscribe(response => {\n          this.router.navigate(['urunler']);\n          this.toasterService.success(response.message, 'Başarılı');\n        }, responseError => {\n          if (responseError.error.ValidationErrors.length > 0) {\n            for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n              this.toasterService.error(responseError.error.ValidationErrors[i].ErrorMessage, 'Doğrulama hatası');\n            }\n          }\n        });\n      } else {\n        this.toasterService.error('Eksik Ürün Bilgiler.', 'Uyarı');\n      }\n\n      return;\n    }\n\n  }\n\n  UrunEkleComponent.ɵfac = function UrunEkleComponent_Factory(t) {\n    return new (t || UrunEkleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UrunlerService), i0.ɵɵdirectiveInject(i3.CategoryService), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  UrunEkleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UrunEkleComponent,\n    selectors: [[\"urun-ekle\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"productName\", \"name\", \"productName\", \"formControlName\", \"productName\", \"placeholder\", \"\\u00DCr\\u00FCn Ad\\u0131\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"productDescription\", \"name\", \"productDescription\", \"formControlName\", \"productDescription\", \"placeholder\", \"\\u00DCr\\u00FCn Detay\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function UrunEkleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Yeni \\u00DCr\\u00FCn Ekle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function UrunEkleComponent_Template_button_click_8_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(9, \" \\u00DCr\\u00FCn Ekle\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.productAddForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return UrunEkleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}