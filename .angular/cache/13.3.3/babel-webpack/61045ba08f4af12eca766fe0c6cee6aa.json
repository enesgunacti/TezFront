{"ast":null,"code":"import { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CategoryService } from \"app/services/category.service\";\nimport { ProductService } from \"app/services/product.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/category.service\";\nimport * as i3 from \"app/services/product.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/router\";\nexport let ProductEditComponent = /*#__PURE__*/(() => {\n  class ProductEditComponent {\n    constructor(formBuilder, categoryService, productService, toasterService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.categoryService = categoryService;\n      this.productService = productService;\n      this.toasterService = toasterService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n    }\n\n    ngOnInit() {// this.createProductEditForm();\n      // this.activatedRoute.params.subscribe((params)=>{\n      //   if(params[\"productId\"]){\n      //     this.getProduct(params[\"productId\"])\n      //   }\n      // })\n    } // createProductEditForm(){\n    //   this.productEditForm = this.formBuilder.group({\n    //     productName:[\"\",Validators.required],\n    //     productDescription:[\"\",Validators.required],\n    //     productPicture:[\"\",Validators.required],\n    //     categoryId:[\"\",Validators.required],\n    //   })\n    // }\n    // getProduct(productId:number){\n    //   this.productService.getProductById(productId).subscribe(response=>{\n    //     this.productEditForm = this.formBuilder.group({\n    //       productId:[response.data?.productId || '', \"\"],\n    //       productName:[response.data?.productName || '', \"\"],\n    //       productDescription:[response.data?.productDescription || '', \"\"],\n    //       productPicture:[response.data?.productPicture || '', \"\"],\n    //       categoryId:[response.data?.categoryId || '', \"\"]\n    //     })\n    //   })\n    // }\n\n\n    edit() {\n      if (this.productEditForm.valid) {\n        let productEditModel = Object.assign({}, this.productEditForm.value); // this.productService.editProduct(productEditModel).subscribe(\n        //   (response) => {\n        //     this.router.navigate(['products']);\n        //     this.toasterService.success(response.message, 'Başarılı');\n        //   },\n        //   (responseError) => {\n        //     if (responseError.error.ValidationErrors.length > 0) {\n        //       for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n        //         this.toasterService.error(\n        //           responseError.error.ValidationErrors[i].ErrorMessage,\n        //           'Doğrulama hatası'\n        //         );\n        //       }\n        //     }\n        //   }\n        // )\n      } else {\n        this.toasterService.error('Eksik Ürün Bilgileri.', 'Uyarı');\n      }\n\n      return;\n    }\n\n  }\n\n  ProductEditComponent.ɵfac = function ProductEditComponent_Factory(t) {\n    return new (t || ProductEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n\n  ProductEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductEditComponent,\n    selectors: [[\"product-edit\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[1, \"form-groupx\", 3, \"formGroup\"], [1, \"form-goup\"], [\"type\", \"text\", \"id\", \"productName\", \"name\", \"productName\", \"formControlName\", \"productName\", \"placeholder\", \"\\u00DCr\\u00FCn Ad\\u0131\", 1, \"form-control\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"productDescription\", \"name\", \"productDescription\", \"formControlName\", \"productDescription\", \"placeholder\", \"\\u00DCr\\u00FCn Detay\", 1, \"form-control\"], [1, \"form-groupx\"], [\"type\", \"text\", \"name\", \"productPicture\", \"formControlName\", \"productPicture\", \"placeholder\", \"\\u00DCr\\u00FCn Resim Link\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function ProductEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"\\u00DCr\\u00FCn G\\u00FCncelle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\")(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ProductEditComponent_Template_button_click_12_listener() {\n          return ctx.edit();\n        });\n        i0.ɵɵtext(13, \" \\u00DCr\\u00FCn G\\u00FCncelle\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.productEditForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return ProductEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}