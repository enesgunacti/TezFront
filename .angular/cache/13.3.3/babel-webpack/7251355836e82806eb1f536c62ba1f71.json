{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CategoryService } from \"app/services/category.service\";\nimport { ProductService } from \"app/services/product.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Product } from \"../product\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/category.service\";\nimport * as i3 from \"app/services/product.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction ProductAddComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \"\\u00DCr\\u00FCn Ad\\u0131 Zorunludur\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProductAddComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \"\\u00DCr\\u00FCn Ad\\u0131 Zorunludur\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProductAddComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \"\\u00DCr\\u00FCn Ad\\u0131 Zorunludur\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ProductAddComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r5.categoryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r5.categoryName, \" \");\n  }\n}\n\nfunction ProductAddComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" Kategori Gereklidir\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ProductAddComponent = /*#__PURE__*/(() => {\n  class ProductAddComponent {\n    constructor(formBuilder, categoryService, productService, toasterService) {\n      this.formBuilder = formBuilder;\n      this.categoryService = categoryService;\n      this.productService = productService;\n      this.toasterService = toasterService;\n      this.product = new Product();\n    }\n\n    createProductAddForm() {\n      this.productAddForm = this.formBuilder.group({\n        productName: [\"\", Validators.required],\n        productDescription: [\"\", Validators.required],\n        productFile: [\"\", Validators.required],\n        categoryId: [\"\", Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.createProductAddForm();\n      this.categoryService.getCategories().subscribe(data => {\n        this.categories = data;\n      });\n    }\n\n    add() {\n      if (this.productAddForm.valid) {\n        this.product = Object.assign({}, this.productAddForm.value);\n      }\n\n      this.productService.addProduct(this.product).subscribe(data => {});\n    }\n\n  }\n\n  ProductAddComponent.ɵfac = function ProductAddComponent_Factory(t) {\n    return new (t || ProductAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  ProductAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductAddComponent,\n    selectors: [[\"app-product-add\"]],\n    features: [i0.ɵɵProvidersFeature([CategoryService, ProductService])],\n    decls: 16,\n    vars: 6,\n    consts: [[1, \"form-group\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-goup\"], [\"type\", \"text\", \"id\", \"productName\", \"name\", \"productName\", \"formControlName\", \"productName\", \"placeholder\", \"\\u00DCr\\u00FCn Ad\\u0131\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"productDescription\", \"name\", \"productDescription\", \"formControlName\", \"productDescription\", \"placeholder\", \"\\u00DCr\\u00FCn Ad\\u0131\", 1, \"form-control\"], [\"type\", \"file\", \"id\", \"productPicture\", \"name\", \"productPicture\", \"formControlName\", \"productPicture\", \"placeholder\", \"\\u00DCr\\u00FCn Ad\\u0131\", 1, \"form-control\", 3, \"change\"], [\"formControlName\", \"categoryId\", \"requried\", \"\", \"id\", \"categoryId\", \"name\", \"categoryId\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"]],\n    template: function ProductAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Yeni \\u00DCr\\u00FCn Ekle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProductAddComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, ProductAddComponent_div_5_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵtemplate(8, ProductAddComponent_div_8_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function ProductAddComponent_Template_input_change_10_listener($event) {\n          return ctx.uploadFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, ProductAddComponent_div_11_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"select\", 7);\n        i0.ɵɵtemplate(14, ProductAddComponent_option_14_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ProductAddComponent_div_15_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.productAddForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.productAddForm.get(\"productName\").hasError(\"required\") && ctx.productAddForm.get(\"productName\").dirty);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.productAddForm.get(\"productDescription\").hasError(\"required\") && ctx.productAddForm.get(\"productDescription\").dirty);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.productAddForm.get(\"productPicture\").hasError(\"required\") && ctx.productAddForm.get(\"productPicture\").dirty);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.productAddForm.get(\"categoryId\").hasError(\"required\") && ctx.productAddForm.get(\"categoryId\").touched);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i5.NgIf, i1.SelectControlValueAccessor, i5.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return ProductAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}