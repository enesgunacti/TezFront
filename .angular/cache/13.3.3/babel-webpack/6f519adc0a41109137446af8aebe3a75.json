{"ast":null,"code":"import { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CategoryService } from \"app/services/category.service\";\nimport { ProductService } from \"app/services/product.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/category.service\";\nimport * as i3 from \"app/services/product.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/router\";\nexport let ProductEditComponent = /*#__PURE__*/(() => {\n  class ProductEditComponent {\n    constructor(formBuilder, categoryService, productService, toasterService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.categoryService = categoryService;\n      this.productService = productService;\n      this.toasterService = toasterService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n    }\n\n    ngOnInit() {// this.createProductEditForm();\n      // this.activatedRoute.params.subscribe((params)=>{\n      //   if(params[\"productId\"]){\n      //     this.getProduct(params[\"productId\"])\n      //   }\n      // })\n    } // createProductEditForm(){\n    //   this.productEditForm = this.formBuilder.group({\n    //     productName:[\"\",Validators.required],\n    //     productDescription:[\"\",Validators.required],\n    //     productPicture:[\"\",Validators.required],\n    //     categoryId:[\"\",Validators.required],\n    //   })\n    // }\n    // getProduct(productId:number){\n    //   this.productService.getProductById(productId).subscribe(response=>{\n    //     this.productEditForm = this.formBuilder.group({\n    //       productId:[response.data?.productId || '', \"\"],\n    //       productName:[response.data?.productName || '', \"\"],\n    //       productDescription:[response.data?.productDescription || '', \"\"],\n    //       productPicture:[response.data?.productPicture || '', \"\"],\n    //       categoryId:[response.data?.categoryId || '', \"\"]\n    //     })\n    //   })\n    // }\n\n\n    edit() {\n      if (this.productEditForm.valid) {\n        let productEditModel = Object.assign({}, this.productEditForm.value);\n        this.productService.editProduct(productEditModel).subscribe(response => {\n          this.router.navigate(['products']);\n          this.toasterService.success(response.message, 'Başarılı');\n        }, responseError => {\n          if (responseError.error.ValidationErrors.length > 0) {\n            for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n              this.toasterService.error(responseError.error.ValidationErrors[i].ErrorMessage, 'Doğrulama hatası');\n            }\n          }\n        });\n      } else {\n        this.toasterService.error('Eksik Ürün Bilgileri.', 'Uyarı');\n      }\n\n      return;\n    }\n\n  }\n\n  ProductEditComponent.ɵfac = function ProductEditComponent_Factory(t) {\n    return new (t || ProductEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n\n  ProductEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductEditComponent,\n    selectors: [[\"product-edit\"]],\n    decls: 1,\n    vars: 0,\n    template: function ProductEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"sadsd\");\n      }\n    },\n    styles: [\"\"]\n  });\n  return ProductEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}