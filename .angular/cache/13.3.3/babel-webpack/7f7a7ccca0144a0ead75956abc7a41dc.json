{"ast":null,"code":"import { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { CategoryService } from \"app/services/category.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/category.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nexport let CategoriesUpdateComponent = /*#__PURE__*/(() => {\n  class CategoriesUpdateComponent {\n    constructor(formBuilder, categoryService, // private productService: ProductService,\n    toasterService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.categoryService = categoryService;\n      this.toasterService = toasterService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n    }\n\n    ngOnInit() {}\n\n    createCategoryEditForm() {\n      this.categoryEditForm = this.formBuilder.group({\n        categoryName: [\"\", Validators.required]\n      });\n    }\n\n    getCategoryById(categoryId) {\n      this.categoryService.getCategoryById(categoryId).subscribe(response => {\n        var _a, _b;\n\n        this.categoryEditForm = this.formBuilder.group({\n          categoryId: [((_a = response.data) === null || _a === void 0 ? void 0 : _a.categoryId) || \"\", \"\"],\n          categoryName: [((_b = response.data) === null || _b === void 0 ? void 0 : _b.categoryName) || \"\", \"\"]\n        });\n      });\n    }\n\n    edit() {\n      if (this.categoryEditForm.valid) {\n        let categoryModel = Object.assign({}, this.categoryEditForm.value);\n        this.categoryService.editProduct(categoryModel).subscribe(response => {\n          this.router.navigate([\"categories\"]);\n          this.toasterService.success(response.message, \"Kategori Güncellemesi\");\n        }, responseError => {\n          if (responseError.error.ValidationErrors.length > 0) {\n            for (let i = 0; i < responseError.error.ValidationErrors.length; i++) {\n              this.toasterService.error(responseError.error.ValidationErrors[i].ErrorMessage, \"Doğrulama hatası\");\n            }\n          }\n        });\n      } else {\n        this.toasterService.error(\"Eksik Ürün Bilgileri.\", \"Uyarı\");\n      }\n\n      return;\n    }\n\n  }\n\n  CategoriesUpdateComponent.ɵfac = function CategoriesUpdateComponent_Factory(t) {\n    return new (t || CategoriesUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  CategoriesUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoriesUpdateComponent,\n    selectors: [[\"categories-update\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"form-groupx\", 3, \"formGroup\"], [1, \"form-goup\"], [\"type\", \"text\", \"id\", \"categoryName\", \"name\", \"categoryName\", \"formControlName\", \"categoryName\", \"placeholder\", \"Kategori Ad\\u0131\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function CategoriesUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Kategori G\\u00FCncelle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CategoriesUpdateComponent_Template_button_click_5_listener() {\n          return ctx.edit();\n        });\n        i0.ɵɵtext(6, \" Kategori G\\u00FCncelle \");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.categoryEditForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return CategoriesUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}